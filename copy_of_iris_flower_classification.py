# -*- coding: utf-8 -*-
"""Copy of Iris Flower Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FQqkW0qD_MKDedN78noCvXtng4LnKXOh
"""

import pandas as pd
import numpy as np
import seaborn as sns
from matplotlib import pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score,confusion_matrix

data=pd.read_csv("Iris.csv")

data.head()

data.shape

data.isnull()

data.describe()

data.info()

data.size

data.isnull().sum()

data.drop(columns='Id',axis=0,inplace=True)

data_split=data.Species.str.split('-',n=-1,expand=True)
data_split.drop(columns=0,axis=1,inplace=True)
data_split

data_full=data.join(data_split)
data_full

data.dtypes

data_full.rename({1:'Species1'},axis=1,inplace=True)
data_full

data_full.drop(columns='Species',axis=1,inplace=True)
data_full

data_full.shape

data_full.isnull()

data_full.isnull().sum()

data_full.corr()

data_full.Species1.value_counts()

data.Species.value_counts()

sns.FacetGrid(data,hue="Species",height=7).map(plt.scatter,"SepalLengthCm","PetalLengthCm").add_legend()

x=data[["SepalLengthCm","SepalWidthCm","PetalLengthCm"]].values
y=data[["Species"]].values

Model=LogisticRegression()
Model.fit(x,y)

Model.score(x,y).round(4)

Actual=y
predicted=Model.predict(x)

from sklearn import metrics
print(metrics.classification_report(Actual,predicted))

print(metrics.confusion_matrix(Actual,predicted))

predicted=Model.predict([[4.6,3.1,1.5]])
predicted

predicted=Model.predict([[5.5,2.6,4.4]])
predicted

predicted=Model.predict([[6.5,3.0,5.8]])
predicted

predicted=Model.predict([[5.0,3.2,1.2],[6.0,2.7,5.1],[7.1,3.0,5.9]])
predicted